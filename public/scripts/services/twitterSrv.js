'use strict'

angular.module('twagoraApp')
	.service('twitterService', function ($rootScope) {

		var _this = this;

		var consumer_secrect = "cFuPJWkuSlTMIfEGDliU9BhCdRglAvzFClzS36G1jbFC2oVEA8";

		// The oauth_consumer_key identifies which application is making the request.
		var consumer_key = "y7caefzht4cCn5abyYRDbYJC6";

		// The oauth_nonce parameter is a unique token generated for each unique request in order to make sure the request is unique.
		var oauth_nonce = "";

		// The oauth_signature parameter contains a value which is generated by running all of the other request parameters and two secret values through a signing algorithm. 
		// The purpose of the signature is so that Twitter can verify that the request has not been modified in transit, verify the application sending the request, 
		// and verify that the application has authorization to interact with the user's account.
		var oauth_signature = "";

		// The oauth_signature_method used by Twitter is HMAC-SHA1. This value should be used for any authorized request sent to Twitter's API.
		var oauth_signature_method = "HMAC-SHA1";

		// The oauth_timestamp parameter indicates when the request was created. This value should be the number of seconds since the Unix epoch at the point the request is generated
		var oauth_timestamp = 0;

		// The oauth_token parameter typically represents a user's permission to share access to their account with the application
		var oauth_token = "";

		// The oauth_version parameter should always be 1.0 for any request sent to the Twitter API.
		var oauth_version = "1.0";

		var nonceCHARS = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";

		// oauth_nonce
		var generateUniqueToken = function (length) {
			for (var i = 0; i < length; ++i) {
				var rnum = Math.floor(Math.random() * nonceCHARS.length);
				oauth_nonce += nonceCHARS.substring(rnum, rnum+1);
			}
			return oauth_nonce;
		};

		// oauth_signature
		var generateSignature = function () {

		};

		// oauth_timestamp
		var generateTimestamp = function () {
			return (new Date().getTime());
		};

		// OAuth oauth_consumer_key="xvz1evFS4wEEPTGEFPHBog", 
		// oauth_nonce="kYjzVBB8Y0ZFabxSWbWovY3uYSQ2pTgmZeNu2VS4cg", 
		// oauth_signature="tnnArxj06cWHq44gCs1OSKk%2FjLY%3D", 
		// oauth_signature_method="HMAC-SHA1", 
		// oauth_timestamp="1318622958", 
		// oauth_token="370773112-GmHxMAgYyLbNEtIKZeRNFsMKPR9EyMZeS9weJAEb", 
		// oauth_version="1.0"
		var generateTwitterRequest = function () {
			var DST = "OAuth ";
			angular.forEach(values, function(value, key) {
				DST += encodeURIComponent(key) + '=' + '"' + encodeURIComponent(value) + '"' + ", ";
			});
			DST = DST.substring(0, DST.length - 2);
		};

		var sortRequest = function (object) {
			var sorted = {};
			Object.keys(object).sort().forEach(function(v) {
				sorted[v] = object[v];
			});
			return (sorted);
		};

		var rawURLEncode = function (str) {
			return encodeURIComponent(str)
				.replace(/!/g, '%21')
				.replace(/'/g, '%27')
				.replace(/\(/g, '%28')
				.replace(/\)/g, '%29')
				.replace(/\*/g, '%2A');
		};

		_this.rawURLEncode = rawURLEncode;

		var generateParameterString = function (object) {
			var output_string = "";
			object = sortRequest(object);
			angular.forEach(object, function(value, key) {
				output_string += rawURLEncode(key) + '=' + rawURLEncode(value) + '&';
			});
			output_string = output_string.substring(0, output_string.length -1);
			return (output_string);
		};

		var generateSignatureBaseString = function (object, type, url) {
			var output_string = "";
			output_string += type.toUpperCase() + '&' + rawURLEncode(url) + '&';
			output_string += rawURLEncode(generateParameterString(object));
			return (output_string);
		};

	});